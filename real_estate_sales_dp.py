# -*- coding: utf-8 -*-
"""Real_Estate_Sales_DP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JfgFk5n0a-YYdDd0q5s5Im-idLTTI-Er

# **DATA USED FOR THIS PROJECT** [Link](https://datasetsearch.research.google.com/search?query=real%20estate%27%20-site%3Akaggle.com&docid=L2cvMTF2MGI4NjlmOA%3D%3D)
"""

import pandas as pd

"""# **Read the dataset from the CSV file**"""

df = pd.read_csv('./Real_Estate_Sales_2001-2020_GL.csv', dtype={'col8': float, 'col9': float, 'col10': float, 'col11': float, 'col12': float})

"""# **Drop columns not needed for analysis**"""

columns_to_drop = ['Non Use Code', 'Assessor Remarks', 'OPM remarks',
       'Location']

df.drop(columns=columns_to_drop, axis=1, inplace=True)
df

"""# **check missing Values**"""

df[df.columns].isna().sum()

"""# **Fill missing values in 'Property Type' and 'Residential Type' with the mode**"""

df['Property Type'].fillna(df['Property Type'].mode()[0], inplace=True)
df['Residential Type'].fillna(df['Residential Type'].mode()[0], inplace=True)

"""# **fill missing dates based on 'List Year' median, and  addresses with 'Unknown'**"""

df['Date Recorded'] = pd.to_datetime(df['Date Recorded'], errors='coerce')
df['Date Recorded'] = df.groupby('List Year')['Date Recorded'].transform(lambda x: x.fillna(x.median()))

df['Address'].fillna('Unknown', inplace=True)

df[df.columns].isna().sum()

"""# **Count the number of zero values in numeric columns**"""

numeric_columns = ['Assessed Value', 'Sale Amount', 'Sales Ratio']
(df[numeric_columns] == 0).sum()

"""# **Handling zeros in numerical data**"""

df['Sale Amount'] = pd.to_numeric(df['Sale Amount'], errors='coerce')
df['Assessed Value'] = pd.to_numeric(df['Assessed Value'], errors='coerce')

df['Sales Ratio'] = df['Sales Ratio'].mask(df['Sales Ratio'] == 0, df['Sale Amount'] / df['Assessed Value'])

numeric_columns = ['Assessed Value', 'Sale Amount', 'Sales Ratio']
(df[numeric_columns] == 0).sum()

df['Assessed Value'] = df['Assessed Value'].mask(
    (df['Assessed Value'] == 0) , df.groupby(['Property Type', 'Town'])['Assessed Value'].transform('mean')
)
df['Sale Amount'] = df['Sale Amount'].mask(
    (df['Sale Amount'] == 0), df.groupby(['Property Type', 'Town'])['Sale Amount'].transform('mean')
)
(df[numeric_columns] == 0).sum()

df['Sales Ratio'] = df['Sales Ratio'].mask(df['Sales Ratio'] == 0, df['Sale Amount'] / df['Assessed Value'])
(df[numeric_columns] == 0).sum()

"""#**Save the cleaned DataFrame to a new CSV file**"""

df.to_csv('./cleanData.csv', index=False)
df.head(5)

"""# **visualizing the DATA**"""

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='List Year', y='Date Recorded', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)